!function(){"use strict";var s={data:{url:"",isLoading:!1,isLoaded:!1,hasError:!1,errorMessage:null,modelProp:null,refreshTimeInterval:null,intervalID:null,clickSelector:null,graphqlId:null,graphqlSrc:null,graphqlQuery:null,errorTextGraphQLErrors:"{count} GraphQL Errors occured. See console for full details.",vueInstance:null},onFetch:null,onError:null,fetchData:function(r,a){var e,o=this,l=null,n=null,t=app.activeController&&"Vue"===app.activeController.viewEngine;o.isLoading||(o.isLoading=!0,o.isLoaded=!1,o.hasError=!1,t?Object.assign(app.activeVueModel,o):null!==o.modelProp&&(app.activeModel[o.modelProp]=app.activeModel[o.modelProp]||{},l=app.activeModel[o.modelProp],Object.assign(l,o)),s.renderControl(r,o),o.graphqlQuery?(e=o.url?o.url:app.settings.graphqlUrl,n={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:o.graphqlQuery,variables:app.buildGraphQLVariables(o.graphqlQuery,app.activeModel)})}):e=app.buildUrl(o.url,app.activeModel),app.fetch(e,n).then(function(e){if("object"!=typeof e&&null!==e)throw new TypeError("Invalid Response type. Received data in format of ["+typeof e+"]");if(o.isLoading=!1,o.isLoaded=!0,o.hasError=!1,o.errorMessage=null,o.graphqlQuery){if(t?(Object.assign(app.activeVueModel,o),Object.assign(app.activeVueModel,e)):null===l?Object.assign(o,e.data):(Object.assign(l,o),Object.assign(l,e.data)),e.errors&&e.errors.length)throw 1===e.errors.length&&e.errors[0].message?"[GraphQL Error]: "+e.errors[0].message:o.errorTextGraphQLErrors.replace("{count}",e.errors.length)}else t?(Object.assign(app.activeVueModel,o),Object.assign(app.activeVueModel,e)):null===l?Object.assign(o,e):(Object.assign(l,o),Object.assign(l,e));s.renderControl(r,o),null!==s.onFetch&&s.onFetch.call(o,r),void 0!==a&&a()}).catch(function(e){o.isLoading=!1,o.isLoaded=!1,o.hasError=!0,o.errorMessage=e,t?Object.assign(app.activeVueModel,o):null!==l&&Object.assign(l,o),s.renderControl(r,o,e),null!==s.onError&&s.onError.call(o,r),void 0!==a&&a()}))},renderControl:function(e,r,a){var o,l;l=r,null!==(o=e).querySelector(".is-loading, is-loaded, .has-error")&&(app.loadCss("dataformsjs-control-json-data",".dataformsjs-control-loading .is-loaded { display:none; } .dataformsjs-control-loading .has-error { display:none; } .dataformsjs-control-loaded .is-loading { display:none; } .dataformsjs-control-loaded .has-error { display:none; } .dataformsjs-control-error .is-loading { display:none; } .dataformsjs-control-error .is-loaded { display:none; }"),o.classList.remove("dataformsjs-control-loading"),o.classList.remove("dataformsjs-control-error"),o.classList.remove("dataformsjs-control-loaded"),l.isLoading?o.classList.add("dataformsjs-control-loading"):l.isLoaded?o.classList.add("dataformsjs-control-loaded"):l.hasError&&o.classList.add("dataformsjs-control-error")),app.activeController&&"Vue"===app.activeController.viewEngine||null!==r.vueInstance?void 0===a?null!==r.vueInstance?r.vueInstance.$nextTick(app.refreshPlugins):app.refreshPlugins():app.showError(e,a):null!==app.activeModel||void 0===window.Vue||null!==r.vueInstance?null!==e.getAttribute("data-template-id")||null!==e.getAttribute("data-template-url")?null===r.modelProp?app.refreshHtmlControl(e,void 0,r):app.refreshHtmlControl(e):void 0===a?app.refreshPlugins(e):app.showError(e,a):r.vueInstance=new Vue({el:e,data:r})},onLoad:function(r){var a=this;this.graphqlId||this.graphqlSrc?(this.url||(this.url=app.settings.graphqlUrl),app.getGraphQL(a.graphqlId,a.graphqlSrc).then(function(e){a.graphqlQuery=e,s.setupControl(a,r)}).catch(function(e){app.showErrorAlert(e),s.setupControl(a,r)})):s.setupControl(a,r)},setupControl:function(e,r){if(null===e.clickSelector)s.fetchData.call(e,r),null!==e.refreshTimeInterval&&(e.intervalID=window.setInterval(function(){s.fetchData.call(e,r)},e.refreshTimeInterval));else{var a=document.querySelector(e.clickSelector);if(null===a){var o="Element not found for <json-data> Control using [data-click-selector]: "+String(e.clickSelector);app.showErrorAlert(o)}else a.addEventListener("click",function(){"boolean"==typeof a.disabled&&(a.disabled=!0),s.fetchData.call(e,r,function(){"boolean"==typeof a.disabled&&(a.disabled=!1)})})}},onUnload:function(){null!==this.intervalID&&window.clearInterval(this.intervalID)}};app.addControl("json-data",s)}();