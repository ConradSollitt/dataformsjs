import React from"react";export default class InputFilter extends React.Component{constructor(t){super(t),this.onChange=this.onChange.bind(this),this.input=React.createRef()}componentDidMount(){this.filter()}onChange(){this.filter()}filter(){const t=this.input.current,e=t.value.toLowerCase().split(" "),s=e.length,r=0!==s;let l=0,n=null,o=null,i=document.querySelectorAll(this.props["filter-selector"]);if(1===i.length&&"TABLE"===i[0].tagName&&i[0].tHead&&1===i[0].tHead.rows.length&&1===i[0].tBodies.length){const t=i[0];n=t.getAttribute("data-sort-class-odd"),o=t.getAttribute("data-sort-class-even"),i=i[0].tBodies[0].rows}const a=i.length,c=o&&n;for(let t=0,a=i.length;t<a;t++){const a=i[t];let u=!0;if(r){const t=a.textContent.toLowerCase();for(let r=0;r<s;r++)if(""!==e[r]&&!t.includes(e[r])){u=!1;break}}u&&(l++,c&&(l%2==0?(a.classList.add(o),a.classList.remove(n)):(a.classList.add(n),a.classList.remove(o)))),a.style.display=u?"":"none"}const u=t.getAttribute("filter-results-selector");if(u){const e=document.querySelector(u);if(!e)return void console.warn("Defined [filter-results-selector] but element not found");const s=t.getAttribute("filter-results-text-all"),r=t.getAttribute("filter-results-text-filtered");if(!s)return void console.warn("Defined [filter-results-selector] without [filter-results-text-all]");if(!r)return void console.warn("Defined [filter-results-selector] without [filter-results-text-filtered]");let n;n=(n=l===a?s:r.replace(/{displayCount}/g,l)).replace(/{totalCount}/g,a),e.textContent=n}}render(){return React.createElement("input",Object.assign({},this.props,{onChange:this.onChange,ref:this.input}))}};